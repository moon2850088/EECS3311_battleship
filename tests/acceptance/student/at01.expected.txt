  state 0 OK -> Start a new game
->debug_test(easy)
  state 1 OK -> Fire Away!
     1  2  3  4
  A  _  _  _  _
  B  _  _  _  v
  C  _  _  h  v
  D  _  _  _  _
  Current Game (debug): 1
  Shots: 0/8
  Bombs: 0/2
  Score: 0/3 (Total: 0/3)
  Ships: 0/2
    2x1: [B, 4]->v;[C, 4]->v
    1x1: [C, 3]->h
->fire([C, 3])
  state 2 OK -> 1x1 ship sunk! Keep Firing!
     1  2  3  4
  A  _  _  _  _
  B  _  _  _  v
  C  _  _  X  v
  D  _  _  _  _
  Current Game (debug): 1
  Shots: 1/8
  Bombs: 0/2
  Score: 1/3 (Total: 1/3)
  Ships: 1/2
    2x1: [B, 4]->v;[C, 4]->v
    1x1: [C, 3]->X
->bomb([B, 4],[C, 5])
  state 3 Bomb coordinates must be adjacent -> Keep Firing!
     1  2  3  4
  A  _  _  _  _
  B  _  _  _  v
  C  _  _  X  v
  D  _  _  _  _
  Current Game (debug): 1
  Shots: 1/8
  Bombs: 0/2
  Score: 1/3 (Total: 1/3)
  Ships: 1/2
    2x1: [B, 4]->v;[C, 4]->v
    1x1: [C, 3]->X
->bomb([B, 4],[C, 4])
  state 4 OK -> 2x1 ship sunk! You Win!
     1  2  3  4
  A  _  _  _  _
  B  _  _  _  X
  C  _  _  X  X
  D  _  _  _  _
  Current Game (debug): 1
  Shots: 1/8
  Bombs: 1/2
  Score: 3/3 (Total: 3/3)
  Ships: 2/2
    2x1: [B, 4]->X;[C, 4]->X
    1x1: [C, 3]->X
->debug_test(easy)
  state 5 OK -> Fire Away!
     1  2  3  4
  A  _  _  _  _
  B  _  _  _  _
  C  _  v  _  _
  D  _  v  _  v
  Current Game (debug): 2
  Shots: 0/8
  Bombs: 0/2
  Score: 0/3 (Total: 3/6)
  Ships: 0/2
    2x1: [C, 2]->v;[D, 2]->v
    1x1: [D, 4]->v
